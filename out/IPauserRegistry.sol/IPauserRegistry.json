{"abi":[{"type":"function","name":"emergencyPauseAll","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getAuthorizedContractCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getAuthorizedContracts","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"isAuthorizedContract","inputs":[{"name":"contractAddress","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPaused","inputs":[{"name":"contractAddress","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"pauseContract","inputs":[{"name":"contractAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unpauseContract","inputs":[{"name":"contractAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ContractAuthorized","inputs":[{"name":"contractAddress","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ContractDeauthorized","inputs":[{"name":"contractAddress","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ContractPaused","inputs":[{"name":"contractAddress","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ContractUnpaused","inputs":[{"name":"contractAddress","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"emergencyPauseAll()":"0775ef0f","getAuthorizedContractCount()":"aff69e8e","getAuthorizedContracts()":"cf2807d9","isAuthorizedContract(address)":"66d0ead3","isPaused(address)":"5b14f183","pauseContract(address)":"adb99c8a","unpauseContract(address)":"d97b9bd5"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"ContractAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"ContractDeauthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"ContractPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"ContractUnpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"emergencyPauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizedContractCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizedContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"isAuthorizedContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"pauseContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"unpauseContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAuthorizedContractCount()\":{\"returns\":{\"_0\":\"uint256 Number of authorized contracts\"}},\"getAuthorizedContracts()\":{\"returns\":{\"_0\":\"address[] Array of authorized contract addresses\"}},\"isAuthorizedContract(address)\":{\"params\":{\"contractAddress\":\"The address of the contract to check\"},\"returns\":{\"_0\":\"bool True if the contract is authorized\"}},\"isPaused(address)\":{\"params\":{\"contractAddress\":\"The address of the contract to check\"},\"returns\":{\"_0\":\"bool True if the contract is paused\"}},\"pauseContract(address)\":{\"params\":{\"contractAddress\":\"The address of the contract to pause\"}},\"unpauseContract(address)\":{\"params\":{\"contractAddress\":\"The address of the contract to unpause\"}}},\"title\":\"IPauserRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"emergencyPauseAll()\":{\"notice\":\"Pauses all authorized contracts\"},\"getAuthorizedContractCount()\":{\"notice\":\"Gets the count of authorized contracts\"},\"getAuthorizedContracts()\":{\"notice\":\"Gets all authorized contracts\"},\"isAuthorizedContract(address)\":{\"notice\":\"Checks if a contract is authorized\"},\"isPaused(address)\":{\"notice\":\"Checks if a contract is paused\"},\"pauseContract(address)\":{\"notice\":\"Pauses a specific contract\"},\"unpauseContract(address)\":{\"notice\":\"Unpauses a specific contract\"}},\"notice\":\"Interface for the PauserRegistry contract that manages protocol pause states\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IPauserRegistry.sol\":\"IPauserRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x52c61faaede0fd1fbdb7e8bccafc03e4e9376765eba4f6cf8d4992b6e697d4a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9b261d10fcfb55108848074c75fde34c37d0578791ddd67f2fb73dce0f6d848\",\"dweb:/ipfs/QmaSCqknPTo7dTio2rPrAo4hQLjEe9CsQUxTusG4aJ4iKa\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"contractAddress","type":"address","indexed":true}],"type":"event","name":"ContractAuthorized","anonymous":false},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address","indexed":true}],"type":"event","name":"ContractDeauthorized","anonymous":false},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address","indexed":true}],"type":"event","name":"ContractPaused","anonymous":false},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address","indexed":true}],"type":"event","name":"ContractUnpaused","anonymous":false},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"emergencyPauseAll"},{"inputs":[],"stateMutability":"view","type":"function","name":"getAuthorizedContractCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getAuthorizedContracts","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"}],"stateMutability":"view","type":"function","name":"isAuthorizedContract","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"}],"stateMutability":"view","type":"function","name":"isPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"pauseContract"},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"unpauseContract"}],"devdoc":{"kind":"dev","methods":{"getAuthorizedContractCount()":{"returns":{"_0":"uint256 Number of authorized contracts"}},"getAuthorizedContracts()":{"returns":{"_0":"address[] Array of authorized contract addresses"}},"isAuthorizedContract(address)":{"params":{"contractAddress":"The address of the contract to check"},"returns":{"_0":"bool True if the contract is authorized"}},"isPaused(address)":{"params":{"contractAddress":"The address of the contract to check"},"returns":{"_0":"bool True if the contract is paused"}},"pauseContract(address)":{"params":{"contractAddress":"The address of the contract to pause"}},"unpauseContract(address)":{"params":{"contractAddress":"The address of the contract to unpause"}}},"version":1},"userdoc":{"kind":"user","methods":{"emergencyPauseAll()":{"notice":"Pauses all authorized contracts"},"getAuthorizedContractCount()":{"notice":"Gets the count of authorized contracts"},"getAuthorizedContracts()":{"notice":"Gets all authorized contracts"},"isAuthorizedContract(address)":{"notice":"Checks if a contract is authorized"},"isPaused(address)":{"notice":"Checks if a contract is paused"},"pauseContract(address)":{"notice":"Pauses a specific contract"},"unpauseContract(address)":{"notice":"Unpauses a specific contract"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IPauserRegistry.sol":"IPauserRegistry"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/interfaces/IPauserRegistry.sol":{"keccak256":"0x52c61faaede0fd1fbdb7e8bccafc03e4e9376765eba4f6cf8d4992b6e697d4a5","urls":["bzz-raw://b9b261d10fcfb55108848074c75fde34c37d0578791ddd67f2fb73dce0f6d848","dweb:/ipfs/QmaSCqknPTo7dTio2rPrAo4hQLjEe9CsQUxTusG4aJ4iKa"],"license":"MIT"}},"version":1},"id":94}